1.
으음.. Mmorpg.js 와 Action.js 가 코드가 너무 같아 , 장르만 다를뿐 내용은 다 같으니깐 GameGenre.js에 작성하고 그냥 import 로 받아오자
o

2.
댓글 제출 버튼을 누를 시 => POST , Axios
POST 요청을 보낼 때 해당 게임의 id와 입력된 댓글 데이터를 함께 전달
why? 만약 id 와 함께 전달을 안할 시 다른 컨텐츠 를 들어가면 다른 컨텐츠 댓글이 보여서

2-1: 엔드 포인트 문제가 발생하네 만약 엔드포인트 data로 해버리면 
{
    "id": 7,
    "title": "GTA 5",
    "platform": "PC, 비디오",
    "genre": "ACTION",
    "producer": "락스타게임즈",
    "provider": "에이치투인터렉티브",
    "level": "18세",
    "year": "2013-09-17",
    "imageUrl": "gta5.jpg",
    "comments": []
},
{
    "id": 8
}
이런식으로 작성이 되는구만... 그렇다고 
fake-server/db.json 에
data -> 게임 데이터를 담고 있는 배열
comments -> 댓글 데이터를 담고 있는 배열을 새로 하나 만든다? 만약 만들면 엔드포인트를 data 대신 comments 로 하고 댓글 입력은 되겠지만 해당 컨텐츠에 작성한 댓글이 다른곳에도 다 보인다. 이 방식도 잘못된 방식이겠지 일단 PASS // 댓글 입력까지는 되지만 다른 컨텐츠에도 보인다.

2-2: POST는 안되는데 PUT은 된다라... 
PUT을 이용을 해보자 -> PUT을 하니깐 댓글 데이터 하나는 잘 들어가는데 두번째 댓글 데이터를 입력하니 1번째가 두번째로 바뀐다.
이유는 간단하다. 원래는 post를 이용해 데이터를 생성을 해줘야하는데 put은 수정이기 때문이다.
그러면... PUT을 어떻게 사용을 해야할까..
첫번째 댓글을 입력시 GET으로 기존 데이터를 받아오고 그 후, 기존 게임 데이터를 이용하여 comments 배열을 업데이트하고, 해당 게임 데이터를 다시 PUT 을 사용하여 업데이트 를 해준다면? GOOD 이거다


리액트 Hook(useState, useEffect)
const [counter, setCounter] = React.useState(초기상태)
첫번째 array(counter) = 상태
두번째 array(setCounter) = 상태를 업데이트 할수 있는 함수

useEffect 란?
첫번째는 함수를 받고 , 
두번째는 Dependency(의존성) 
어떤 클래스 A가 다른 클래스(또는 인터페이스)B를 이용할 때 A가 B에 의존한다고 한다.
A는 B없이 작동할 수 없고 B를 재사용하지 않으면 A또한 재사용 할 수 없다.
useEffect(() => {
    // SOCKET IO OPEN
    console.log('USE EFFECT RAN')'

    // Unmount
    return () => {
        // SOCKET IO CLOSE
        console.log('UNMOUNT');
    };
}, [])
만약 [] 안에 counter 가 들어가면 counter 가 발생할 때 마다 실행이 된다. 지금 위에는 비어있으니 처음 마운트 될 때만 실행